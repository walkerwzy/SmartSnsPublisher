@{
    ViewBag.Title = "Post here";
}
@section css{
    <style type="text/css">
        .checkbox .btn-link {
            padding-top: 0;
            padding-bottom: 0;
        }
    </style>
}
<br />
<div class="container" ng-app="srv">
    <div class=" col-xs-12 col-md-8 col-md-offset-2" ng-controller="myCtrl">
        <div class="alert alert-danger" ng-show="$root.errMsg">
            {{$root.errMsg}}
        </div>
        <div class="alert alert-success" ng-show="$root.infoMsg">
            {{$root.infoMsg}}
        </div>
        <form role="form" ng-submit="submit()">
            <div class="form-group">
                <label for="txtcont">Mesage</label>
                <textarea id="txtcont" placeholder="Input your message here" class="form-control" ng-model="msg"></textarea>
            </div>
            <div class="form-group">
                @*<label for="exampleInputFile">File input</label>*@
                <input type="file" id="exampleInputFile">
                @*<p class="help-block">Example block-level help text here.</p>*@
            </div>
            <ul class="list-unstyled">
                <li class="checkbox" ng-repeat="(key,site) in sites" ng-mouseenter="showAction($index)" ng-mouseleave="showAction(-1)">
                    <label><input type="checkbox" name="snsaccount" ng-disabled="{{!site.linked}}" ng-model="site.sync" />&nbsp;{{key}}</label>
                    <span ng-show="cursite==$index" class="pull-right">
                        <button class="btn btn-link" ng-disabled="{{site.linked}}" ng-click="goAuth(site.url)"><i class="glyphicon glyphicon-link"></i>&nbsp;link</button>
                        <button class="btn btn-link" ng-disabled="{{!site.linked}}"><i class="glyphicon glyphicon-floppy-remove"></i> unlink</button>
                    </span>
                </li>
            </ul>
            <div class="well well-sm text-muted text-center" ng-show="!sites">loading sns data...</div>
            <div class="text-right">
                <span><strong>{{140-msg.length}}</strong>&nbsp;left&nbsp;</span>
                <button type="submit" class="btn btn-primary pull-right"><i class="glyphicon glyphicon-edit"></i> Submit</button>
            </div>
            <div ng-file-drop="onFileSelect($files)" ng-file-drag-over-class="alert-success"
                 ng-show="dropSupported" class="alert" id="dragzone">drop files here</div>
            <div ng-file-drop-available="dropSupported=true"
                 ng-show="!dropSupported">HTML5 Drop File is not supported!</div>
            <button ng-click="upload.abort()">Cancel Upload</button>
        </form>
    </div>
</div>
@section headjs{
    @Scripts.Render("~/bundles/angular")
}
@section scripts{
    <script type="text/javascript">
        var app = angular.module('srv', ['angularLocalStorage', 'angularFileUpload']);
        app.controller('myCtrl', ['$scope', '$rootScope', 'storage', 'mySrv', '$upload',
            function ($scope, $rootScope, storage, mySrv, $upload) {
                storage.bind($scope, 'msg');
                $rootScope.errMsg = '';
                $scope.cursite = -1;
                $scope.showAction = function (index) {
                    $scope.cursite = index;
                };
                $scope.goAuth = function (url) {
                    location.href = url;
                };
                $scope.submit = function () {

                };
                mySrv.getUserSiteList().success(function (data, status) {
                    $scope.sites = {
                        sina: { linked: false, sync: false, url: '/social/getcode/sina' },
                        qq: { linked: false, sync: false, url: '/social/getcode/qq' }
                    };
                    angular.forEach(data, function (m) {
                        var site = $scope.sites[m.sitename];
                        if (site) {
                            site.linked = true;
                            site.sync = true;
                        }
                    });
                })
                    .error(function (data, status) {
                        console.log(data);
                        mySrv.error(data.ExceptionMessage || data.Message);
                    });
                $scope.onFileSelect = function ($files) {
                    //$files: an array of files selected, each file has name, size, and type.
                    //for (var i = 0; i < $files.length; i++) {
                        var file = $files[0];
                        $scope.upload = $upload.upload({
                            url: '/file', //upload.php script, node.js route, or servlet url
                            method: 'POST',
                            //headers: {'headerKey': 'headerValue'},
                            //withCredentials: true,
                            //data: { myObj: $scope.myModelObj },
                            file: file,
                            //file: $files, //upload multiple files, this feature only works in HTML5 FromData browsers
                            /* set file formData name for 'Content-Desposition' header. Default: 'file' */
                            //fileFormDataName: myFile, //OR for HTML5 multiple upload only a list: ['name1', 'name2', ...]
                            /* customize how data is added to formData. See #40#issuecomment-28612000 for example */
                            //formDataAppender: function(formData, key, val){} //#40#issuecomment-28612000
                        }).progress(function (evt) {
                            console.log('percent: ' + parseInt(100.0 * evt.loaded / evt.total));
                        }).success(function (data, status, headers, config) {
                            // file is uploaded successfully
                            console.log(data);
                        });
                        //.error(...)
                        //.then(success, error, progress);
                    //}
                };
            }]);
        app.service('mySrv', ['$rootScope', '$http', '$timeout', function ($rootScope, $http, $timeout) {
            var self = this;
            self.getUserSiteList = function () {
                return $http.get('/api/site');
            };
            self.error = function (msg) {
                $rootScope.errMsg = msg;
                $timeout(function () { $rootScope.errMsg = ''; }, 10000);
            };
            self.info = function (msg) {
                $rootScope.infoMsg = msg;
                $timeout(function () { $rootScope.infoMsg = ''; }, 10000);
            };
            return self;
        }]);
        $(function() {
            //$("#dragzone").on('dragover', function(e) {
            //    e.preventDefault();
            //    e.stopPropagation();
            //    $(this).removeClass("alert-warning");
            //}).on('dragleave', function (e) {
            //    e.preventDefault();
            //    e.stopPropagation();
            //    $(this).addClass("alert-warning");
            //}).on('mouseleave', function (e) {
            //    e.preventDefault();
            //    e.stopPropagation();
            //    $(this).addClass("alert-warning");
            //});
        });
    </script>
}